security:
    always_authenticate_before_granting: true
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    role_hierarchy:
        ROLE_ELEVE_TEST: [ROLE_ELEVE]
        ROLE_PROFESSEUR: [ROLE_ELEVE]
        ROLE_SUPER_ADMIN: [ROLE_PROFESSEUR, ROLE_ELEVE]

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: ~ }
        in_database:
            entity:
                class: App\Entity\User
                property: pseudo
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true

            provider: in_database

            form_login:
                login_path: security_login
                check_path: security_login

            logout:
                path: security_logout
                target: index

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/prof, roles: ROLE_PROFESSEUR }
         - { path: ^/admin, roles: ROLE_SUPER_ADMIN}
